body {
    font-family: 'Cutive Mono', monospace;
    font-size: 20px;
    line-height: 20px;
    // word-break: break-all;
    // The CSS ch unit is defined as the width of the character 0 (zero, or U+0030) of the font. â‰ˆ
    width: 100svw;
    height: 100svh;
    // overflow-y: hidden;
    overflow-x: hidden;
    padding: 0;
    margin: 0;
}

.back {
    display: inline;
    color: #dadada;
    font-style: italic;
    // mix-blend-mode: difference;

}

.background-layer {
  word-break: break-all;
}

a:hover {
    font-style: italic;
    // color: grey;
}

.tag-link {
  position: relative;
  /* brightness controls the threshold point */
  filter: brightness(0.8) blur(3px) contrast(999);
}

.tag-link:hover {
  // remove the filter
  filter: none;
}

.tag-link.current-tag {
  filter: none;
}

.project-link {
  // make it positioned so that we can scatter it around
  position: absolute;
  top: 0;
  left: 0;
}
// .halftone {
//   position: relative;
//   filter: brightness(0.8) blur(3px) contrast(999);
// }
// .halftone::after {
//   position: absolute;
//   inset: 0;
//   background:
//     radial-gradient(10px at center, black, white),
//     radial-gradient(10px at 5px 5px, cyan, white),
//     radial-gradient(10px at 15px 5px, magenta, white),
//     radial-gradient(10px at 10px 15px, yellow, white);
//   background-size: 20px 20px;
//   background-blend-mode: multiply;
//   mix-blend-mode: screen;
// }


.invert {
  // color: rgb(51, 51, 51);
  // add the two colors together
  // mix-blend-mode: calc(50% + 50%);
}


.post-image {
  position: absolute;
  z-index: -1; /* Ensure it is behind other content */
  filter: grayscale(100%) contrast(100%) brightness(200%); // blur(5px)
  width: 50%;
  opacity: 0.24;
}

#image1 {
  top: 55%;
  left: 0px;
  width: 140%;
  height: auto;
}

// #image2 {
//   top: 600px;
//   right: 50px;
//   // width: 150px;
//   height: auto;
// }

.mirror {
    display: inline-block;
    -moz-transform: scaleX(-1);
    -o-transform: scaleX(-1);
    -webkit-transform: scaleX(-1);
    transform: scaleX(-1);
    filter: FlipH;
    white-space: pre;
}

// .back span:hover{ 
//     transition: transform 1s;
//     transform: rotateX(180deg);
// }

// remove all of the special formatting for a tags
a {
    color: inherit;
    text-decoration: none;
    background-color: transparent;
}

/* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */
.flip-card {
    background-color: transparent;
    width: 300px;
    height: 200px;
    border: 1px solid #f1f1f1;
    perspective: 1000px; /* Remove this if you don't want the 3D effect */
  }
  

  /* This container is needed to position the front and back side */
  .flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.8s;
    transform-style: preserve-3d;
  }
  
  /* Do an horizontal flip when you move the mouse over the flip box container */
  .flip-card:hover .flip-card-inner {
    transform: rotateY(180deg);
  }
  
  /* Position the front and back side */
  .flip-card-front, .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden; /* Safari */
    backface-visibility: hidden;
  }
  
  /* Style the front side (fallback if image is missing) */
  .flip-card-front {
    background-color: #bbb;
    color: black;
  }
  
  /* Style the back side */
  .flip-card-back {
    background-color: dodgerblue;
    color: white;
    transform: rotateY(180deg);
  }
